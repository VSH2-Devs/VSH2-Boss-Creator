/*
 * This Boss was generated by VSH2 Boss Creator v1.0a
 * Copyright Nirari Technologies.
*/

#include <sourcemod>
#include <sdktools>
#include <sdkhooks>
#include <tf2_stocks>
#include <vsh2>

#undef REQUIRE_PLUGIN
#tryinclude <tf2attributes>
#define REQUIRE_PLUGIN

#define {{BossName}}Model    "{{ModelFolder}}/{{BossModel}}"

public Plugin myinfo = {
	name = "VSH2 {{BossName}} Boss Module",
	author = "{{Author}}",
	description = "",
	version = "1.0",
	url = ""
};

int g_i{{BossName}}ID;

char {{BossName}}Intro[][] = {
{{Intros}}}

char {{BossName}}Themes[][] = {
{{Themes}}}

float {{BossName}}ThemeTimes[][] = {
{{Timings}}}

enum struct VSH2CVars {
	ConVar scout_rage_gen;
	ConVar airblast_rage;
	ConVar jarate_rage;
}

VSH2CVars g_vsh2_cvars;

public void OnLibraryAdded(const char[] name) {
	if( StrEqual(name, "VSH2") ) {
		g_vsh2_cvars.scout_rage_gen = FindConVar("vsh2_scout_rage_gen");
		g_vsh2_cvars.airblast_rage = FindConVar("vsh2_airblast_rage");
		g_vsh2_cvars.jarate_rage = FindConVar("vsh2_jarate_rage");
		g_i{{BossName}}ID = VSH2_RegisterPlugin("{{BossName}}");
		LoadVSH2Hooks();
	}
}

stock bool Is{{BossName}}(const VSH2Player player) {
	return player.GetPropInt("iBossType") == g_i{{BossName}}ID;
}

public void LoadVSH2Hooks()
{
	if( !VSH2_HookEx(OnCallDownloads, {{BossName}}_OnCallDownloads) )
		LogError("Error loading OnCallDownloads forwards for {{BossName}} module.");
	
	if( !VSH2_HookEx(OnBossMenu, {{BossName}}_OnBossMenu) )
		LogError("Error loading OnBossMenu forwards for {{BossName}} module.");
	
	if( !VSH2_HookEx(OnBossSelected, {{BossName}}_OnBossSelected) )
		LogError("Error loading OnBossSelected forwards for {{BossName}} module.");
	
	if( !VSH2_HookEx(OnBossEquipped, {{BossName}}_OnBossEquipped) )
		LogError("Error loading OnBossEquipped forwards for {{BossName}} module.");
	
	if( !VSH2_HookEx(OnMusic, {{BossName}}_Music) )
		LogError("Error loading OnMusic forwards for {{BossName}} module.");
}

public void {{BossName}}_OnCallDownloads()
{
	PrepareModel({{BossName}}Model);
	DownloadSoundList({{BossName}}Intro, sizeof({{BossName}}Intro));
	DownloadSoundList({{BossName}}Themes, sizeof({{BossName}}Themes));

	{{Skins}}}


public void {{BossName}}_OnBossMenu(Menu &menu)
{
	char tostr[10]; IntToString(g_i{{BossName}}ID, tostr, sizeof(tostr));
	menu.AddItem(tostr, "{{BossName}}");
}

public void {{BossName}}_OnBossSelected(const VSH2Player player)
{
	if( !Is{{BossName}}(player) )
		return;
	
	Panel panel = new Panel();
	panel.SetTitle("{{BossName}}:\nInfo Message 1.\nInfo Message 2.\nInfo Message 3.");
	panel.DrawItem("Exit");
	panel.Send(player.index, HintPanel, 50);
	delete panel;
}

public int HintPanel(Menu menu, MenuAction action, int param1, int param2)
{
	return;
}

public void {{BossName}}_OnBossEquipped(const VSH2Player player)
{
	if( !Is{{BossName}}(player) )
		return;
	
	player.SetName("{{BossName}}");
	player.RemoveAllItems();
	
	/// REMEMBER TO CHANGE THE WEAPON:
	char attribs[128]; Format(attribs, sizeof(attribs), "68; 2.0; 2; 3.1; 259; 1.0; 252; 0.6; 214; %d", GetRandomInt(999, 9999));
	int wep = player.SpawnWeapon("tf_weapon_shovel", 5, 100, 5, attribs);
	SetEntPropEnt(player.index, Prop_Send, "m_hActiveWeapon", wep);
}

public void {{BossName}}_Music(char song[PLATFORM_MAX_PATH], float &time, const VSH2Player player)
{
	if( !Is{{BossName}}(player) )
		return;
	
	int theme = GetRandomInt(0, sizeof({{BossName}}Themes)-1);
	Format(song, sizeof(song), "%s", {{BossName}}Themes[theme]);
	time = {{BossName}}ThemeTimes[theme];
}